'use strict'

const Joi = require('@hapi/joi')

const gc = Joi.object({ // seperate options in user/system override it - upgrade doesn't have this since upgrade works differently (nixos-rebuild vs nix-env)
  onInterval: Joi.alternatives().try(Joi.boolean().default(true), Joi.string()), // true for daily, otherwise string for interval
  onLowSpace: Joi.number().integer().default(1024 * 1024 * 1024 * 2), // 2gb min free
  keepDerivations: Joi.number().integer().default(2),
  maxFree: Joi.number().integer().default(0)
})

const upgradeCommon = {
  silentFetch: Joi.alternatives().try(Joi.boolean().default(true), Joi.string()), // fetch channels silently, true (daily) or interval in cron format
  silentPrepare: Joi.boolean().default(true), // note that this will not trigger if we have a pay-per-usage/mobile connection
  forceSilentPrepare: Joi.boolean().default(false), // even run prepare if we are on a paid connection
}

const validateReal = Joi.object({
      gc,
      system: Joi.object({
        upgrade: Joi.object({
          ...upgradeCommon,
          silentApplyForNextBoot: Joi.boolean().default(true), // nixos-rebuild boot
          notifyUpdateAvailable: Joi.boolean().default(true), // notify user and let user apply during current boot
          rollback: Joi.object({
            checks: Joi.object({
              sanityCheck: Joi.boolean().default(true),
              grubFlag: Joi.boolean().default(false) // we'll give it a boot and if it doesn't boot up 3 times until display-manager we'll do a rollback (also should patch the grub config so grub can also catch disasterous kernel updates)
            })
          })
        }),
        gc
      }),
      user: Joi.object({
        upgrade: Joi.object({
          ...upgradeCommon
        }),
        gc
      })
    })

gc:
  onInterval: true # true=daily, false=never or string containing cron interval
  onLowSpace: 2147483648 # 2gb, 0 to disable, will trigger every minute and check threshold on /nix/store partition
  keepDerivations: 2 # how many derivations to keep
  maxFree: 0 # _only_ free _up to_ this much space, 0=ignore
system:
  gc: # override the gc from above
  upgrade: # affects nixos-rebuild
    silentFetch: true # fetch channels silently, true=daily false=never or string in cron interval
    silentPrepare: true # prefetch already built derivations from cache but don't build anything just yet, will not run on paid networks (e.g. mobile)
    forceSilentPrepare: false # always run silentPrepare
    silentApplyForNextBoot: true # build with nixos-rebuild boot so update gets applied on next boot
    notifyUpdateAvailable: true # make a notification to apply update during current boot
    rollback:
      checks:
        sanityCheck: true # perform checks while the system is running
        grubFlag: false # add settings to grub to auto-rollback
      allowAuto: critical # never, critical, always - change when auto-rollbacks are done
user:
  gc: # override the gc from above
  upgrade: # affects nix-env
    silentFetch: true # fetch channels silently, true=daily false=never or string in cron interval
    silentPrepare: true # prefetch already built derivations from cache but don't build anything just yet, will not run on paid networks (e.g. mobile)
    forceSilentPrepare: false # always run silentPrepare
